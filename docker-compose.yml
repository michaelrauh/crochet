services:
  ingestor:
    build:
      context: .
      dockerfile: ./ingestor/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - context
      - jaeger  # Add dependency on jaeger
    networks:
      - app-network
    environment:
      - CONTEXT_SERVICE_URL=http://context:8081  # Correctly point to the context service
      - INGESTOR_PORT=8080
      - REMEDIATIONS_SERVICE_URL=http://remediations:8082  # Add URL for remediations service
      - JAEGER_AGENT_HOST=jaeger  # Add Jaeger agent host
      - JAEGER_AGENT_PORT=6831    # Add Jaeger agent port
      - JAEGER_SERVICE_NAME=ingestor # Service name for tracing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  context:
    build:
      context: .
      dockerfile: ./context/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - jaeger  # Add dependency on jaeger
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:8081/health | grep -q 200 || (echo 'Health check failed' && exit 1)"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
    environment:
      - CONTEXT_PORT=8081
      - CONTEXT_HOST=0.0.0.0
      - JAEGER_AGENT_HOST=jaeger  # Add Jaeger agent host
      - JAEGER_AGENT_PORT=6831    # Add Jaeger agent port
      - JAEGER_SERVICE_NAME=context # Service name for tracing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  remediations:
    build:
      context: .
      dockerfile: ./remediations/Dockerfile
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - jaeger  # Add dependency on jaeger
    environment:
      - REMEDIATIONS_PORT=8082
      - JAEGER_AGENT_HOST=jaeger  # Add Jaeger agent host
      - JAEGER_AGENT_PORT=6831    # Add Jaeger agent port
      - JAEGER_SERVICE_NAME=remediations # Service name for tracing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"   # accept zipkin.thrift over compact thrift protocol
      - "6831:6831/udp"   # accept jaeger.thrift over compact thrift protocol
      - "6832:6832/udp"   # accept jaeger.thrift over binary thrift protocol
      - "5778:5778"       # serve configs
      - "16686:16686"     # serve frontend
      - "14268:14268"     # accept jaeger.thrift directly from clients
      - "14250:14250"     # accept model.proto
    networks:
      - app-network
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      - QUERY_BASE_PATH=/
      - SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
      - LOG_LEVEL=debug
    restart: always

networks:
  app-network:
    driver: bridge
